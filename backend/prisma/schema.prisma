// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("ENGINEER") // MANAGER, ENGINEER
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Engineer specific fields
  skills         String?
  seniority      String?    // JUNIOR, MID, SENIOR, LEAD
  hourlyCapacity Int?       @default(8) // hours per day

  // Relations
  assignments Assignment[]
  managedProjects Project[] @relation("ProjectManager")

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  status      String   @default("PLANNING") // PLANNING, IN_PROGRESS, ON_HOLD, COMPLETED, CANCELLED
  startDate   DateTime
  endDate     DateTime?
  priority    String   @default("MEDIUM") // LOW, MEDIUM, HIGH, CRITICAL
  managerId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  manager     User         @relation("ProjectManager", fields: [managerId], references: [id])
  assignments Assignment[]

  @@map("projects")
}

model Assignment {
  id               String   @id @default(cuid())
  userId           String
  projectId        String
  allocatedHours   Int      // hours per day allocated to this project
  startDate        DateTime
  endDate          DateTime?
  status           String   @default("ACTIVE") // ACTIVE, COMPLETED, CANCELLED
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  user    User    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId, startDate])
  @@map("assignments")
}

 